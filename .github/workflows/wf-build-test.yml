name: Build, test (Pull Request)

on:
  pull_request:
    branches:
      - master 

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  test:
    name: Test ${{ matrix.dotnet-framework.name }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        dotnet-framework:
          - { name: ".NET Framework 4.6.2", framework: "net462", coverage: false, no-build: true, sdk: "" }
          - { name: ".NET Core 2.1", framework: "netcoreapp2.1", coverage: true, no-build: false, sdk: "2.1.x" }
          - { name: ".NET Core 3.1", framework: "netcoreapp3.1", coverage: true, no-build: true, sdk: "3.1.x" }
          - { name: ".NET 5.0", framework: "net5.0", coverage: true, no-build: true, sdk: "5.0.x" }
          - { name: ".NET 5.0 Windows", framework: "net5.0-windows", coverage: true, no-build: true, sdk: "5.0.x" }
          - { name: ".NET 6.0", framework: "net6.0", coverage: true, no-build: true, sdk: "6.0.x" }
          - { name: ".NET 6.0 Windows", framework: "net6.0-windows", coverage: true, no-build: true, sdk: "6.0.x" }

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: Compiled project
        path: ${{ github.workspace }}

    - name: Install .NET SDK ${{ matrix.dotnet-framework.sdk }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          ${{ matrix.dotnet-framework.sdk }}
          8.0.x

    - name: Run tests for ${{ matrix.dotnet-framework.name }}
      working-directory: QRCoderTests
      run: dotnet test -c Debug -f ${{ matrix.dotnet-framework.framework }} --nologo -p:CollectCoverage=${{ matrix.dotnet-framework.coverage }} -p:CoverletOutputFormat=opencover
        
  additional-tests:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      name: Checkout Code

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Run trim analysis
      working-directory: QRCoderTrimAnalysis
      run: dotnet publish -c Release -o bin/publish

    - name: Run API approval tests
      working-directory: QRCoderApiTests
      run: dotnet test -c Release --nologo
